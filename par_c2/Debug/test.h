/* source file testbin.par */
/* output file test.h */
/* file created on Thu Nov 20 17:49:19 1997 */

S16 num_rule_sections=1;

S16 rule_sections[1]={	0	};

S16 num_rules=20;

S16 rule_index_table[20] = {
	0x0000,	0x0038,	0x0070,	0x00AC,	0x00D0,	0x00F8,
	0x0138,	0x016C,	0x0194,	0x01D0,	0x0210,	0x025C,
	0x02AC,	0x0304,	0x035C,	0x03B4,	0x0404,	0x0464,
	0x04B8,	0x0510
};

/*
 * in this file, the rule in its old form is printed before the
 * the rule in its new form
 */

unsigned char rule_data_table[1352] = {
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	   12,	-1,	-1,	-1,	-1,	-1,	"D[2-40]':'D[0-32]o/':'D[4-12]/"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x0C,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x44,  0x5B,  0x32,  0x2D,  0x34,  0x30,
  0x5D,  0x27,  0x3A,  0x27,  0x44,  0x5B,  0x30,  0x2D,  0x33,  0x32,
  0x5D,  0x6F,  0x2F,  0x27,  0x3A,  0x27,  0x44,  0x5B,  0x34,  0x2D,
  0x31,  0x32,  0x5D,  0x2F,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	   25,	-1,	-1,	-1,	-1,	-1,	"a/D<3>/`t`'h'|`s`'t'|`nd`|`rd`/"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x19,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x61,  0x2F,  0x44,  0x3C,  0x33,  0x3E,
  0x2F,  0x60,  0x74,  0x60,  0x27,  0x68,  0x27,  0x7C,  0x60,  0x73,
  0x60,  0x27,  0x74,  0x27,  0x7C,  0x60,  0x6E,  0x64,  0x60,  0x7C,
  0x60,  0x72,  0x64,  0x60,  0x2F,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	   37,	-1,	-1,	-1,	-1,	-1,	"A<2-5>h/1,D<2-5>/r/$7/$9/|FAIL/N<+>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x25,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x41,  0x3C,  0x32,  0x2D,  0x35,  0x3E,
  0x68,  0x2F,  0x31,  0x2C,  0x44,  0x3C,  0x32,  0x2D,  0x35,  0x3E,
  0x2F,  0x72,  0x2F,  0x24,  0x37,  0x2F,  0x24,  0x39,  0x2F,  0x7C,
  0x46,  0x41,  0x49,  0x4C,  0x2F,  0x4E,  0x3C,  0x2B,  0x3E,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	   50,	-1,	-1,	-1,	-1,	-1,	"C<1-3>E<*>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x32,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x43,  0x3C,  0x31,  0x2D,  0x33,  0x3E,
  0x45,  0x3C,  0x2A,  0x3E,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	  100,	-1,	-1,	-1,	-1,	-1,	"r/`if`/'while'/"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x64,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x72,  0x2F,  0x60,  0x69,  0x66,  0x60,
  0x2F,  0x27,  0x77,  0x68,  0x69,  0x6C,  0x65,  0x27,  0x2F,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	  200,	-1,	-1,	-1,	-1,	-1,	"a/D[2-50]d/':'/r/A<+>U<4>/'me'//' foo'/"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xC8,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x61,  0x2F,  0x44,  0x5B,  0x32,  0x2D,
  0x35,  0x30,  0x5D,  0x64,  0x2F,  0x27,  0x3A,  0x27,  0x2F,  0x72,
  0x2F,  0x41,  0x3C,  0x2B,  0x3E,  0x55,  0x3C,  0x34,  0x3E,  0x2F,
  0x27,  0x6D,  0x65,  0x27,  0x2F,  0x2F,  0x27,  0x20,  0x66,  0x6F,
  0x6F,  0x27,  0x2F,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	  300,	-1,	-1,	-1,	-1,	-1,	"a/D<2-50,63-100>/' foo'/"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x2C,  0x01,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x61,  0x2F,  0x44,  0x3C,  0x32,  0x2D,
  0x35,  0x30,  0x2C,  0x36,  0x33,  0x2D,  0x31,  0x30,  0x30,  0x3E,
  0x2F,  0x27,  0x20,  0x66,  0x6F,  0x6F,  0x27,  0x2F,  0x00,  0x00,
  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	  400,	-1,	-1,	-1,	-1,	-1,	"p/R4/'3'p/R5/"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x90,  0x01,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x70,  0x2F,  0x52,  0x34,  0x2F,  0x27,
  0x33,  0x27,  0x70,  0x2F,  0x52,  0x35,  0x2F,  0x00,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	  500,	-1,	-1,	-1,	-1,	-1,	"h/1,D<2-3>/r/H<2-3>/$9/|FAIL/A<2-3>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xF4,  0x01,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x68,  0x2F,  0x31,  0x2C,  0x44,  0x3C,
  0x32,  0x2D,  0x33,  0x3E,  0x2F,  0x72,  0x2F,  0x48,  0x3C,  0x32,
  0x2D,  0x33,  0x3E,  0x2F,  0x24,  0x39,  0x2F,  0x7C,  0x46,  0x41,
  0x49,  0x4C,  0x2F,  0x41,  0x3C,  0x32,  0x2D,  0x33,  0x3E,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	  600,	-1,	-1,	-1,	-1,	-1,	"d/($2,Nx~<4>)/a/A<2-7>'.'H<0-3>/' '$2/"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x58,  0x02,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x64,  0x2F,  0x28,  0x24,  0x32,  0x2C,
  0x4E,  0x78,  0x7E,  0x3C,  0x34,  0x3E,  0x29,  0x2F,  0x61,  0x2F,
  0x41,  0x3C,  0x32,  0x2D,  0x37,  0x3E,  0x27,  0x2E,  0x27,  0x48,
  0x3C,  0x30,  0x2D,  0x33,  0x3E,  0x2F,  0x27,  0x20,  0x27,  0x24,
  0x32,  0x2F,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	  700,	-1,	-1,	-1,	-1,	-1,	"H<1>A<2>C<1-3>E<*>O<+>L<3-*>N<3-+>B<2-4,*>T<3-76,+>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xBC,  0x02,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x48,  0x3C,  0x31,  0x3E,  0x41,  0x3C,
  0x32,  0x3E,  0x43,  0x3C,  0x31,  0x2D,  0x33,  0x3E,  0x45,  0x3C,
  0x2A,  0x3E,  0x4F,  0x3C,  0x2B,  0x3E,  0x4C,  0x3C,  0x33,  0x2D,
  0x2A,  0x3E,  0x4E,  0x3C,  0x33,  0x2D,  0x2B,  0x3E,  0x42,  0x3C,
  0x32,  0x2D,  0x34,  0x2C,  0x2A,  0x3E,  0x54,  0x3C,  0x33,  0x2D,
  0x37,  0x36,  0x2C,  0x2B,  0x3E,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	  800,	-1,	-1,	-1,	-1,	-1,	"P<1-3,5-12>U<1-4,6-*>V<23-43,55-+>Y<3>W<3>D<4>D[3-234]"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x20,  0x03,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x50,  0x3C,  0x31,  0x2D,  0x33,  0x2C,
  0x35,  0x2D,  0x31,  0x32,  0x3E,  0x55,  0x3C,  0x31,  0x2D,  0x34,
  0x2C,  0x36,  0x2D,  0x2A,  0x3E,  0x56,  0x3C,  0x32,  0x33,  0x2D,
  0x34,  0x33,  0x2C,  0x35,  0x35,  0x2D,  0x2B,  0x3E,  0x59,  0x3C,
  0x33,  0x3E,  0x57,  0x3C,  0x33,  0x3E,  0x44,  0x3C,  0x34,  0x3E,
  0x44,  0x5B,  0x33,  0x2D,  0x32,  0x33,  0x34,  0x5D,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	  900,	-1,	-1,	-1,	-1,	-1,	"Hx<1>Ax<2>Cx<1-3>Ex<*>Ox<+>Lx<3-*>Nx<3-+>Bx<2-4,*>Tx<3-76,+>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x84,  0x03,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x48,  0x78,  0x3C,  0x31,  0x3E,  0x41,
  0x78,  0x3C,  0x32,  0x3E,  0x43,  0x78,  0x3C,  0x31,  0x2D,  0x33,
  0x3E,  0x45,  0x78,  0x3C,  0x2A,  0x3E,  0x4F,  0x78,  0x3C,  0x2B,
  0x3E,  0x4C,  0x78,  0x3C,  0x33,  0x2D,  0x2A,  0x3E,  0x4E,  0x78,
  0x3C,  0x33,  0x2D,  0x2B,  0x3E,  0x42,  0x78,  0x3C,  0x32,  0x2D,
  0x34,  0x2C,  0x2A,  0x3E,  0x54,  0x78,  0x3C,  0x33,  0x2D,  0x37,
  0x36,  0x2C,  0x2B,  0x3E,  0x00,  0x00,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	 1000,	-1,	-1,	-1,	-1,	-1,	"Px<1-3,5-12>Ux<1-4,6-*>Vx<23-43,55-+>Yx<3>Wx<3>Dx<4>Dx[3-234]"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xE8,  0x03,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x50,  0x78,  0x3C,  0x31,  0x2D,  0x33,
  0x2C,  0x35,  0x2D,  0x31,  0x32,  0x3E,  0x55,  0x78,  0x3C,  0x31,
  0x2D,  0x34,  0x2C,  0x36,  0x2D,  0x2A,  0x3E,  0x56,  0x78,  0x3C,
  0x32,  0x33,  0x2D,  0x34,  0x33,  0x2C,  0x35,  0x35,  0x2D,  0x2B,
  0x3E,  0x59,  0x78,  0x3C,  0x33,  0x3E,  0x57,  0x78,  0x3C,  0x33,
  0x3E,  0x44,  0x78,  0x3C,  0x34,  0x3E,  0x44,  0x78,  0x5B,  0x33,
  0x2D,  0x32,  0x33,  0x34,  0x5D,  0x00,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	 1100,	-1,	-1,	-1,	-1,	-1,	"H~<1>A~<2>C~<1-3>E~<*>O~<+>L~<3-*>N~<3-+>B~<2-4,*>T~<3-76,+>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x4C,  0x04,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x48,  0x7E,  0x3C,  0x31,  0x3E,  0x41,
  0x7E,  0x3C,  0x32,  0x3E,  0x43,  0x7E,  0x3C,  0x31,  0x2D,  0x33,
  0x3E,  0x45,  0x7E,  0x3C,  0x2A,  0x3E,  0x4F,  0x7E,  0x3C,  0x2B,
  0x3E,  0x4C,  0x7E,  0x3C,  0x33,  0x2D,  0x2A,  0x3E,  0x4E,  0x7E,
  0x3C,  0x33,  0x2D,  0x2B,  0x3E,  0x42,  0x7E,  0x3C,  0x32,  0x2D,
  0x34,  0x2C,  0x2A,  0x3E,  0x54,  0x7E,  0x3C,  0x33,  0x2D,  0x37,
  0x36,  0x2C,  0x2B,  0x3E,  0x00,  0x00,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	 1200,	-1,	-1,	-1,	-1,	-1,	"P~<1-3,5-12>U~<1-4,6-*>V~<23-43,55-+>Y~<3>W~<3>D~<4>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xB0,  0x04,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x50,  0x7E,  0x3C,  0x31,  0x2D,  0x33,
  0x2C,  0x35,  0x2D,  0x31,  0x32,  0x3E,  0x55,  0x7E,  0x3C,  0x31,
  0x2D,  0x34,  0x2C,  0x36,  0x2D,  0x2A,  0x3E,  0x56,  0x7E,  0x3C,
  0x32,  0x33,  0x2D,  0x34,  0x33,  0x2C,  0x35,  0x35,  0x2D,  0x2B,
  0x3E,  0x59,  0x7E,  0x3C,  0x33,  0x3E,  0x57,  0x7E,  0x3C,  0x33,
  0x3E,  0x44,  0x7E,  0x3C,  0x34,  0x3E,  0x00,  0x00,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	 1300,	-1,	-1,	-1,	-1,	-1,	"Hx~<1>Ax~<2>Cx~<1-3>Ex~<*>Ox~<+>Lx~<3-*>Nx~<3-+>Bx~<2-4,*>Tx~<3-76,+>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x14,  0x05,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x48,  0x78,  0x7E,  0x3C,  0x31,  0x3E,
  0x41,  0x78,  0x7E,  0x3C,  0x32,  0x3E,  0x43,  0x78,  0x7E,  0x3C,
  0x31,  0x2D,  0x33,  0x3E,  0x45,  0x78,  0x7E,  0x3C,  0x2A,  0x3E,
  0x4F,  0x78,  0x7E,  0x3C,  0x2B,  0x3E,  0x4C,  0x78,  0x7E,  0x3C,
  0x33,  0x2D,  0x2A,  0x3E,  0x4E,  0x78,  0x7E,  0x3C,  0x33,  0x2D,
  0x2B,  0x3E,  0x42,  0x78,  0x7E,  0x3C,  0x32,  0x2D,  0x34,  0x2C,
  0x2A,  0x3E,  0x54,  0x78,  0x7E,  0x3C,  0x33,  0x2D,  0x37,  0x36,
  0x2C,  0x2B,  0x3E,  0x00,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	 1400,	-1,	-1,	-1,	-1,	-1,	"Px~<1-3,5-12>Ux~<1-4,6-*>Vx~<23-43,55-+>Yx~<3>Wx~<3>Dx~<4>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x78,  0x05,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x50,  0x78,  0x7E,  0x3C,  0x31,  0x2D,
  0x33,  0x2C,  0x35,  0x2D,  0x31,  0x32,  0x3E,  0x55,  0x78,  0x7E,
  0x3C,  0x31,  0x2D,  0x34,  0x2C,  0x36,  0x2D,  0x2A,  0x3E,  0x56,
  0x78,  0x7E,  0x3C,  0x32,  0x33,  0x2D,  0x34,  0x33,  0x2C,  0x35,
  0x35,  0x2D,  0x2B,  0x3E,  0x59,  0x78,  0x7E,  0x3C,  0x33,  0x3E,
  0x57,  0x78,  0x7E,  0x3C,  0x33,  0x3E,  0x44,  0x78,  0x7E,  0x3C,
  0x34,  0x3E,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	 1500,	-1,	-1,	-1,	-1,	-1,	"c/d/o/($1,p/R8/)//a/b/i/r/A<4-7>/'flubber'//' '//$4//'foo'//"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xDC,  0x05,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x63,  0x2F,  0x64,  0x2F,  0x6F,  0x2F,
  0x28,  0x24,  0x31,  0x2C,  0x70,  0x2F,  0x52,  0x38,  0x2F,  0x29,
  0x2F,  0x2F,  0x61,  0x2F,  0x62,  0x2F,  0x69,  0x2F,  0x72,  0x2F,
  0x41,  0x3C,  0x34,  0x2D,  0x37,  0x3E,  0x2F,  0x27,  0x66,  0x6C,
  0x75,  0x62,  0x62,  0x65,  0x72,  0x27,  0x2F,  0x2F,  0x27,  0x20,
  0x27,  0x2F,  0x2F,  0x24,  0x34,  0x2F,  0x2F,  0x27,  0x66,  0x6F,
  0x6F,  0x27,  0x2F,  0x2F,  0x00,  0x00,  0x00,  0x00,
//{	0,	-1,	0xFFFFFFFF,	0xFFFFFFFF,	 1600,	-1,	-1,	-1,	-1,	-1,	"S{'this',A<3>U<4>,`help`}<1>"	}
  0x00,  0x00,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0x40,  0x06,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,  0xFF,
  0xFF,  0xFF,  0xFF,  0xFF,  0x53,  0x7B,  0x27,  0x74,  0x68,  0x69,
  0x73,  0x27,  0x2C,  0x41,  0x3C,  0x33,  0x3E,  0x55,  0x3C,  0x34,
  0x3E,  0x2C,  0x60,  0x68,  0x65,  0x6C,  0x70,  0x60,  0x7D,  0x3C,
  0x31,  0x3E,  0x00,  0x00,  0x00,  0x00
};

/* this is table of indexes in the dict_index_table of */
/* start, end, and the size each dictionary */
dict_pointers_t dict_point[1]={
{	    0,	    1,	    2	}};

S16 dict_index_table[2] = {
	0x0000,	0x000A
};

unsigned char dict_data_table[20] = {
//{	"20",	"twenty"	}
  0x32,  0x30,  0x00,  0x74,  0x77,  0x65,  0x6E,  0x74,  0x79,  0x00,

//{	"30",	"thirty"	}
  0x33,  0x30,  0x00,  0x74,  0x68,  0x69,  0x72,  0x74,  0x79,  0x00
};

